import fs from 'fs'
import glob from 'glob'
import mkdirp from 'mkdirp'
import remapToFaker from './remapToFaker'

// TODO: REFACTOR ALL THIS + REMOVE IT

const config = {
  src: './specs',
  dest: './output'
}

export const getSpecsFromFile = (file) => {
  const specs = fs.readFileSync(file, 'utf-8')
  if (!specs) return

  return JSON.parse(specs)
}

export const writeSpecsToFile = (fileName, specs) => {
  const filePath = fileName.replace(config.src, config.dest)
  const specOutput = JSON.stringify(specs, null, 2)

  fs.writeFile(filePath, specOutput, err => {
    if (err) {
      console.error(err)
      return process.exit(1)
    } else {
      console.log(`${filePath} generated by Specter.`)
    }
  })
}

const specter = glob(`${config.src}/**/*`, {}, (err, files) => {
  if (err) {
    console.error(err)
  }

  mkdirp(config.dest)

  files.forEach(file => {
    const specs = remapToFaker(getSpecsFromFile(file))
    writeSpecsToFile(file, specs)
  })
})

export default specter
